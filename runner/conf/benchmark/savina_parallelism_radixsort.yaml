# @package benchmark
name: "Radix Sort"
params:
  data_size: ${problem_size.radixsort_data_size}
  max_value: 1152921504606846976  # 2^60
  seed: 2048

# target specific configuration
targets:
  akka:
    jar: "${savina_path}/target/savina-0.0.1-SNAPSHOT-jar-with-dependencies.jar"
    class: "edu.rice.habanero.benchmarks.radixsort.RadixSortAkkaActorBenchmark"
    run_args:
      data_size: ["-n", "<value>"]
      max_value: ["-m", "<value>"]
      seed: ["-s", "<value>"]
  caf:
    bin: "caf_16_radixsort"
    run_args:
      data_size: ["-n", "<value>"]
      max_value: ["-m", "<value>"]
      seed: ["-s", "<value>"]
  lf-cpp:
    copy_sources:
      - "${bench_path}/Cpp/Savina/src/BenchmarkRunner.lf"
      - "${bench_path}/Cpp/Savina/src/parallelism"
      - "${bench_path}/Cpp/Savina/src/IncludeHeaders.cmake"
      - "${bench_path}/Cpp/Savina/src/PseudoRandom.hh"
    lf_file: "parallelism/RadixSort.lf"
    binary: "RadixSort"
    gen_args: null
    run_args:
      data_size: ["--dataSize", "<value>"]
      max_value: ["--maxValue", "<value>"]
      seed: ["--seed", "<value>"]
  lf-c:
    copy_sources:
      - "${bench_path}/C/Savina/src/BenchmarkRunner.lf"
      - "${bench_path}/C/Savina/src/include"
      - "${bench_path}/C/Savina/src/parallelism"
    lf_file: "parallelism/RadixSort.lf"
    binary: "RadixSort"
    gen_args:
      data_size: ["-D", "dataSize=<value>"]
      max_value: ["-D", "maxValue=<value>"]
      seed: ["-D", "seed=<value>"]
  lf-rust:
    copy_sources:
      - "${bench_path}/Rust/Savina/src/lib"
      - "${bench_path}/Rust/Savina/src/parallelism"
    lf_file: "parallelism/RadixSort.lf"
    binary: "radix_sort"
    run_args:
      data_size: ["--main-num-values", "<value>"]
      max_value: ["--main-max-value", "<value>"]
      seed: ["--main-seed", "<value>"]

